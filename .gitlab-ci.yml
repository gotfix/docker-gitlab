# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

variables:
  NO_PROXY: "127.0.0.1, localhost, docker, registry, *.gotfix.com"
  DOCKER_DRIVER: overlay
  DOCKER_HUB_BASE: gotfix/gitlab
  GITHUB_REPO_URL: https://phpb-com:${GITHUB_TOKEN}@github.com/phpb-com/docker-gitlab.git

services:
  - docker:dind

stages:
 - build
 - release
 - mirror

before_script:
  - export IMAGE_TAG=$(echo -en ${CI_COMMIT_REF_NAME} | tr -c '[:alnum:]_.-' '-')
  - export VCS_REF=${CI_COMMIT_SHA:0:8}
  - export VCS_BRANCH=${CI_COMMIT_REF_NAME}
  - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" $CI_REGISTRY

build:
  stage: build
  script:
    - docker build 
        --build-arg=http_proxy=${HTTP_PROXY}
        --build-arg=HTTP_PROXY=${HTTP_PROXY}
        --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        --build-arg VCS_REF=${VCS_REF}
        --build-arg VCS_BRANCH=${VCS_BRANCH}
        --build-arg VERSION=$(cat VERSION)
        --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
# Automatic build configured in docker cloud
#   - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
  except:
    - latest

tag-latest:
  image: docker:git
  stage: release
  script:
    - git config --global user.email "ci@gotfix.com"
    - git config --global user.name "CI Build"
    - git tag -fa latest -m "CI Build auto-tagged, latest master branch ref"
    - git push --force https://${ACCESS_USER}:${ACCESS_TOKEN}@gotfix.com/docker/gitlab.git refs/tags/latest
  only:
    - master

release:
  stage: release
  script:
    - echo "Automatic build configured, no need to push our build"
#   - docker pull "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}"
#   - docker tag "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}" "${DOCKER_HUB_BASE}"
#   - docker tag "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}" "${DOCKER_HUB_BASE}:${IMAGE_TAG}"
#   - docker tag "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}" "${DOCKER_HUB_BASE}:latest"
#   - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
#   - docker push "${DOCKER_HUB_BASE}"
#   - docker push "${DOCKER_HUB_BASE}:${IMAGE_TAG}"
#   - docker push "${DOCKER_HUB_BASE}:latest"
  only:
    - master
    - tags
  except:
    - latest

github_mirror:
  type: mirror
  image: docker:git
  script:
    - mkdir -p "${WORK_DIR}/mirror" && cd "${WORK_DIR}/mirror"
    - git clone -q --mirror "${CI_REPOSITORY_URL}"
    - cd "${CI_PROJECT_NAME}.git"
    - git push -q --mirror "${GITHUB_REPO_URL}"
  except:
    - latest
